# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# n = int(input("Enter a quantity of elements in the first set: ")) 
# m = int(input("Enter a quantity of elements in the second set: ")) 
# s1=set()
# for i in range(n):
#     s1.update([int(input("Enter an elements of the first set: "))])
# s2=set()   
# for i in range(m):    
#     s2.update([int(input("Enter an elements of the second set: "))])
# s3=s1.intersection(s2)   
# print(sorted(s3))



# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику.
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.

# n = int(input("Enter the number of bushes: ")) 
# berr = list()
# for item in range(n):
#     berr.append(int(input("Enter a number of berries on the bush: ")))
# print(berr)   
# harvest=max=0 
# for i in range(len(berr)):
#     harvest= berr[i-2]+berr[i-1]+berr[i]
#     if harvest>max:
#         max=harvest
# print(max)
